server:
  port: 8765

spring:
  cloud:
    function:
      definition: consumeDeviceResponse;produceDeviceCommandMessage
    stream:
      function:
        definition: consumeDeviceResponse;produceDeviceCommandMessage
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            application-id: iot
            brokers: csdev.krakow.comarch:9092
            deserialization-exception-handler: logandcontinue
      bindings:
        consumeDeviceResponse-in-0:
          destination: device-response
        produceDeviceCommandMessage-out-0:
          destination: device-command
  jpa:
    database: POSTGRESQL
    show-sql: true
    hibernate:
      ddl-auto: none
  datasource:
    url: jdbc:postgresql://localhost:5421/iot?currentSchema=iot
    username: postgres
    password: postgres
    driverClassName: org.postgresql.Driver
  sql:
    init:
      platform: postgres

  data:
    mongodb:
      database: admin
      username: root
      password: example
      port: 27777
      host: localhost

deviceMessageProducer:
  queueSize: 1000
